package main

import (
	"encoding/json"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"text/template"
	"time"
)

type provinceData struct {
	Pid string
	NameTh string `json:"name_th"`
	NameEn string `json:"name_en"`
	LocationGeo string `json:"location_geo"`
}

func main() {

	const url = "https://raw.githubusercontent.com/kazekim/thai-tambons/master/province/json/province.json"

	rsp, err := http.Get(url)
	die(err)
	defer rsp.Body.Close()

	jsonData, err := ioutil.ReadAll(rsp.Body)

	var provinces []provinceData

	err = json.Unmarshal(jsonData, &provinces)
	die(err)

	var list []string
	for _, pv := range provinces {
		list = append(list, pv.NameEn)
	}

	f, err := os.Create("../province/province.go")
	die(err)
	defer f.Close()

	err = packageTemplate.Execute(f, struct {
		Timestamp time.Time
		Provinces     []string
	}{
		Timestamp: time.Now(),
		Provinces:     list,
	})

	die(err)
}

func die(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

var packageTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// {{ .Timestamp }}
package province

var Provinces = []string{
{{- range .Provinces }}
	{{ printf "%q" . }},
{{- end }}
}
`))